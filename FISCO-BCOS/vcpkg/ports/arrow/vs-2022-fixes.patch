diff --git a/cpp/src/arrow/compute/light_array_test.cc b/cpp/src/arrow/compute/light_array_test.cc
index 3f6d47803..dcc7841a0 100644
--- a/cpp/src/arrow/compute/light_array_test.cc
+++ b/cpp/src/arrow/compute/light_array_test.cc
@@ -18,6 +18,7 @@
 #include "arrow/compute/light_array.h"
 
 #include <gtest/gtest.h>
+#include <numeric>
 
 #include "arrow/compute/exec/test_util.h"
 #include "arrow/testing/generator.h"
diff --git a/cpp/src/arrow/util/tracing.cc b/cpp/src/arrow/util/tracing.cc
index b8bddcd50..126c69781 100644
--- a/cpp/src/arrow/util/tracing.cc
+++ b/cpp/src/arrow/util/tracing.cc
@@ -38,6 +38,7 @@ Span::Impl& Span::Set(Impl&& impl) {
 #endif
 
 // Default destructor when impl type is complete.
+Span::Span() = default;
 Span::~Span() = default;
 
 }  // namespace tracing
diff --git a/cpp/src/arrow/util/tracing.h b/cpp/src/arrow/util/tracing.h
index 15f7fca1e..1d9d08b33 100644
--- a/cpp/src/arrow/util/tracing.h
+++ b/cpp/src/arrow/util/tracing.h
@@ -35,11 +35,11 @@ class SpanImpl;
 namespace util {
 namespace tracing {
 
-class ARROW_EXPORT Span {
+class Span {
  public:
   using Impl = arrow::internal::tracing::SpanImpl;
 
-  Span() = default;  // Default constructor. The inner_impl is a nullptr.
+  Span();  // Default constructor. The inner_impl is a nullptr.
   ~Span();  // Destructor. Default destructor defined in tracing.cc where impl is a
             // complete type.
 
